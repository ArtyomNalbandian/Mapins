[versions]
activityCompose = "1.10.1"
androidDesugarJdkLibs = "2.1.4"
androidGradlePlugin = "8.10.1"
androidTools = "31.9.0"
androidxLifecycle = "2.8.7"
androidxNavigation="2.8.5"
appcompat = "1.7.1"
composeBom = "2024.09.00"
coreKtx = "1.16.0"
espressoCore = "3.6.1"
hilt = "2.56"
jetbrainsKotlinJvm = "2.1.10"
junit = "4.13.2"
junitVersion = "1.2.1"
kotlin = "2.1.10"
kotlinxSerializationJson = "1.8.0"
ksp = "2.1.10-1.0.31"
lifecycleRuntimeKtx = "2.9.2"
mapsMobile = "4.18.0-full"
material = "1.12.0"
room = "2.6.1"

[libraries]

# AndroidX and Google libraries
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
android-desugarJdkLibs = { group = "com.android.tools", name = "desugar_jdk_libs", version.ref = "androidDesugarJdkLibs" }
hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
hilt-android-testing = { group = "com.google.dagger", name = "hilt-android-testing", version.ref = "hilt" }
hilt-compiler = { group = "com.google.dagger", name = "hilt-compiler", version.ref = "hilt" }
hilt-core = { group = "com.google.dagger", name = "hilt-core", version.ref = "hilt" }

# Testing libraries
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }

# Lifecycle and UI libraries
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }

# Compose UI libraries and components
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-lifecycle-runtimeCompose = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidxLifecycle" }
androidx-lifecycle-viewModelCompose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "androidxLifecycle" }
androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "androidxNavigation" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }

# Material and AppCompat libraries
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
maps-mobile = { module = "com.yandex.android:maps.mobile", version.ref = "mapsMobile" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }

# ----------------------------------------------------------
# Dependencies for build-logic (included builds or buildSrc)
# ----------------------------------------------------------
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "androidGradlePlugin" }
android-tools-common = { group = "com.android.tools", name = "common", version.ref = "androidTools" }
compose-gradlePlugin = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }
kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
ksp-gradlePlugin = { group = "com.google.devtools.ksp", name = "com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
room-gradlePlugin = { group = "androidx.room", name = "room-gradle-plugin", version.ref = "room" }

[plugins]

# Main Android and Kotlin plugins
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
jetbrains-kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "jetbrainsKotlinJvm" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
#hilt = { id = "dagger.hilt.android.plugin", version.ref = "hilt" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt"}
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp"}
room = { id = "androidx.room", version.ref = "room"}

# -----------------------------------
# Custom plugins defined in the project (build-logic plugins)
# -----------------------------------
mapins-android-application = { id = "mapins.android.application" }
mapins-android-application-compose = { id = "mapins.android.application.compose" }
mapins-android-application-firebase = { id = "mapins.android.application.firebase" }
mapins-android-application-flavors = { id = "mapins.android.application.flavors" }
mapins-android-application-jacoco = { id = "mapins.android.application.jacoco" }
mapins-android-feature = { id = "mapins.android.feature" }
mapins-android-library = { id = "mapins.android.library" }
mapins-android-library-compose = { id = "mapins.android.library.compose" }
mapins-android-library-jacoco = { id = "mapins.android.library.jacoco" }
mapins-android-lint = { id = "mapins.android.lint" }
mapins-android-room = { id = "mapins.android.room" }
mapins-android-test = { id = "mapins.android.test" }
mapins-hilt = { id = "mapins.hilt" }
mapins-jvm-library = { id = "mapins.jvm.library" }
